-- 10 : 테이터 무결성과 제약 조건, 11 뷰

-- 1. employee 테이블의 구조를 복사하여 emp_sample 란 이름의 테이블을 만드시오. 
-- 사원 테이블의 사원번호 컬럼에 테이블 레벨로 primary key 제약조건을 지정하되 제약조건 이름은 my_emp_pk로 지정하시오. 

-- 테이블 복사
create table emp_sample
as
select *
from employee
where 0=1 ;

select * from emp_sample;

-- Primary Key 제약조건 추가
alter table emp_sample
add constraint PK_EMP_SAMPLE_ENO Primary Key(eno);

-- 제약조건 확인
select * from user_constraints
where table_name = 'EMP_SAMPLE';

-- 2. department 테이블의 구조를 복사하여 dept_sample 란 이름의 테이블을 만드시오. 
-- 부서 테이블의 부서번호 컬럼에 레벨로 primary key 제약 조건을 지정하되 제약 조건이름은 my_dept_pk로 지정하시오. 

-- 테이블 복사 (구조만 복사)
create table dept_sample
as
select *
from department
where 0=1;

-- Primary Key 제약조건 추가
alter table dept_sample
add constraint PK_DEPT_SAMPLE_DNO Primary Key(dno);

-- 제약조건 확인
select * from user_constraints
where table_name in ('EMP_SAMPLE','DEPT_SAMPLE');

-- 3. 사원 테이블의 부서번호 컬럼에 존재하지 않는 부서의 사원이 배정되지 않도록 외래키 제약조건을 지정하되
-- 제약 조건이름은 my_emp_dept_fk 로 지정하시오. [주의 : 위 복사한 테이블을 사용하시오]
select * from emp_sample;

-- Foreign 제약조건 추가
alter table emp_sample
add constraint FK_EMP_SAMPLE_DNO_DEPT_SAMPLE Foreign key (dno) references dept_sample (dno);

-- 제약 조건 확인 
select * from user_constraints
where table_name in ( 'EMP_SAMPLE', 'DEPT_SAMPLE');

-- 4. 사원테이블의 커밋션 컬럼에 0보다 큰 값만을 입력할 수 있도록 제약 조건을 지정하시오. [주의 : 위 복사한 테이블을 사용하시오]
select * from emp_sample;

-- Check 제약 조건 추가
alter table emp_sample
add constraint CK_EMP_SAMPLE_COMMISSION check ( commission > 0);

-- 5. 사원테이블의 웝급 컬럼에 기본 값으로 1000 을 입력할 수 있도록 제약 조건을 지정하시오. [주의 : 위 복사한 테이블을 사용하시오]
-- alter table
-- modify               <= default, Not Null

-- default 제약조건 추가
alter table emp_sample
modify salary default 1000;

-- 6. 사원테이블의 이름 컬럼에 중복되지 않도록  제약 조건을 지정하시오. [주의 : 위 복사한 테이블을 사용하시오]

-- Unique 제약조건 추가
alter table emp_sample 
add constraint UK_EMP_SAMPLE_ENAME Unique (ename);

-- 7. 사원테이블의 커밋션 컬럼에 null 을 입력할 수 없도록 제약 조건을 지정하시오. [주의 : 위 복사한 테이블을 사용하시오]
select * from emp_sample;

-- 제약조건 disable 
alter table emp_sample
disable constraint CK_EMP_SAMPLE_COMMISSION;

-- null값 0으로 수정
update emp_sample
set commission = 0
where commission is null;

-- NOT NULL 제약조건 추가
alter table emp_sample
modify commission constraint NN_EMP_SAMPLE_COMMISSION not null;

-- 8. 위의 생성된 모든 제약 조건을 제거 하시오. 

-- 제약조건 확인
select * from user_constraints
where table_name in ('EMP_SAMPLE','DEPT_SAMPLE');

-- 제약조건을 제거 시 : Foreign Key 참조하면 제거가 안된다
    -- 1. Foreign Key를 먼저 제거 후 Primary Key 제거
    -- 2. Primary Key를 제거할때 cascade 옵션을 사용 : Foreign Key 먼저 제거 되고 Primary Key가 제거됨
    
alter table emp_sample 
drop primary key;   -- PK 제거

alter table dept_sample
drop primary key cascade; -- fk 제거후 pk도 제거

alter table emp_sample 
drop constraint NN_EMP_SAMPLE_COMMISSION; -- NOT NULL 제거

alter table emp_sample 
drop constraint CK_EMP_SAMPLE_COMMISSION;   -- CHECK 제거

alter table emp_sample 
drop constraint UK_EMP_SAMPLE_ENAME;    -- UNIQUE 제거

-- 제약조건 제거 확인
select * from user_constraints
where table_name in ('EMP_SAMPLE','DEPT_SAMPLE');

-- <<< 뷰 문제 >>>> 

-- 1. 20번 부서에 소속된 사원의 사원번호과 이름과 부서번호를 출력하는 select 문을 하나의 view 로 정의 하시오.
-- 뷰의 이름 : v_em_dno  
    -- 뷰 : 가상의 테이블, select 문만 올 수 있다.
        -- 보안을 위해서 : 실제 테이블의 컬럼을 숨길 수 있다.
        -- 편의성을 위해서 : 복잡한 구문을 view를 생성하면, 복잡한 Join
    create table emp_view
    as
    select * from employee;

-- 뷰 생성 
create view v_em_dno  
as
select eno, ename, dno
from emp_view
where dno = 20;

-- 뷰 실행 
select * from v_em_dno;

-- 2. 이미 생성된 뷰( v_em_dno ) 에 대해서 급여 역시 출력 할 수 있도록 수정하시오. 

-- 뷰 수정 / 생성
create or replace view v_em_dno  
as
select eno, ename, dno, salary
from emp_view
where dno = 20;

select * from v_em_dno;

-- 3. 생성된  뷰를 제거 하시오. 
-- 뷰 제거
drop view v_em_dno;

-- 4. 각 부서의 급여의  최소값, 최대값, 평균, 총합을 구하는 뷰를 생성 하시오. 
--	뷰이름 : v_sal_emp

-- 그룹핑 뷰 생성 (별칭을 붙여줘야함)
create view v_sal_emp
as
select min(salary) min, max(salary) max, round(avg(salary)) avg, sum(salary) sum
from emp_view
group by dno;

select * from v_sal_emp;

-- 5. 이미 생성된 뷰( v_em_dno ) 에 대해서 <<읽기전용 뷰로>> 수정하시오. 

-- 읽기전용 뷰로 수정 (read only)
create or replace view v_em_dno  
as
select eno, ename, dno, salary
from employee 
where dno = 20 with read only;

select * from v_em_dno;
